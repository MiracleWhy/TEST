<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.uton.carsokApi.dao.EventHistoryMapper" >
  <resultMap id="BaseResultMap" type="com.uton.carsokApi.model.EventHistory" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="event_name" property="eventName" jdbcType="VARCHAR" />
    <result column="event_status" property="eventStatus" jdbcType="VARCHAR" />
    <result column="weight" property="weight" jdbcType="VARCHAR" />
    <result column="exception" property="exception" jdbcType="VARCHAR" />
    <result column="retry_time" property="retryTime" jdbcType="INTEGER" />
    <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
    <result column="gmt_modify" property="gmtModify" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.uton.carsokApi.model.EventHistory" extends="BaseResultMap" >
    <result column="data" property="data" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, event_name, event_status, weight, exception, retry_time, gmt_create, gmt_modify
  </sql>
  <sql id="Blob_Column_List" >
    data
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from event_history
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from event_history
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.uton.carsokApi.model.EventHistory" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into event_history (event_name, event_status, weight, 
      exception, retry_time, gmt_create, 
      gmt_modify, data)
    values (#{eventName,jdbcType=VARCHAR}, #{eventStatus,jdbcType=VARCHAR}, #{weight,jdbcType=VARCHAR}, 
      #{exception,jdbcType=VARCHAR}, #{retryTime,jdbcType=INTEGER}, #{gmtCreate,jdbcType=TIMESTAMP}, 
      #{gmtModify,jdbcType=TIMESTAMP}, #{data,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.uton.carsokApi.model.EventHistory" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into event_history
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="eventName != null" >
        event_name,
      </if>
      <if test="eventStatus != null" >
        event_status,
      </if>
      <if test="weight != null" >
        weight,
      </if>
      <if test="exception != null" >
        exception,
      </if>
      <if test="retryTime != null" >
        retry_time,
      </if>
      <if test="gmtCreate != null" >
        gmt_create,
      </if>
      <if test="gmtModify != null" >
        gmt_modify,
      </if>
      <if test="data != null" >
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="eventName != null" >
        #{eventName,jdbcType=VARCHAR},
      </if>
      <if test="eventStatus != null" >
        #{eventStatus,jdbcType=VARCHAR},
      </if>
      <if test="weight != null" >
        #{weight,jdbcType=VARCHAR},
      </if>
      <if test="exception != null" >
        #{exception,jdbcType=VARCHAR},
      </if>
      <if test="retryTime != null" >
        #{retryTime,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null" >
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModify != null" >
        #{gmtModify,jdbcType=TIMESTAMP},
      </if>
      <if test="data != null" >
        #{data,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.uton.carsokApi.model.EventHistory" >
    update event_history
    <set >
      <if test="eventName != null" >
        event_name = #{eventName,jdbcType=VARCHAR},
      </if>
      <if test="eventStatus != null" >
        event_status = #{eventStatus,jdbcType=VARCHAR},
      </if>
      <if test="weight != null" >
        weight = #{weight,jdbcType=VARCHAR},
      </if>
      <if test="exception != null" >
        exception = #{exception,jdbcType=VARCHAR},
      </if>
      <if test="retryTime != null" >
        retry_time = #{retryTime,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null" >
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModify != null" >
        gmt_modify = #{gmtModify,jdbcType=TIMESTAMP},
      </if>
      <if test="data != null" >
        data = #{data,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.uton.carsokApi.model.EventHistory" >
    update event_history
    set event_name = #{eventName,jdbcType=VARCHAR},
      event_status = #{eventStatus,jdbcType=VARCHAR},
      weight = #{weight,jdbcType=VARCHAR},
      exception = #{exception,jdbcType=VARCHAR},
      retry_time = #{retryTime,jdbcType=INTEGER},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modify = #{gmtModify,jdbcType=TIMESTAMP},
      data = #{data,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.uton.carsokApi.model.EventHistory" >
    update event_history
    set event_name = #{eventName,jdbcType=VARCHAR},
      event_status = #{eventStatus,jdbcType=VARCHAR},
      weight = #{weight,jdbcType=VARCHAR},
      exception = #{exception,jdbcType=VARCHAR},
      retry_time = #{retryTime,jdbcType=INTEGER},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modify = #{gmtModify,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <insert id="insertByBaseEvent" parameterType="com.uton.carsokApi.model.BaseEvent" >
    insert into event_history (event_name, event_status, weight, 
      exception, retry_time, gmt_create, 
      gmt_modify, data)
    values (#{eventName,jdbcType=VARCHAR}, #{eventStatus,jdbcType=VARCHAR}, #{weight,jdbcType=VARCHAR}, 
      #{exception,jdbcType=VARCHAR}, #{retryTime,jdbcType=INTEGER}, #{gmtCreate,jdbcType=TIMESTAMP}, 
      #{gmtModify,jdbcType=TIMESTAMP}, #{data,jdbcType=LONGVARCHAR})
  </insert>
</mapper>